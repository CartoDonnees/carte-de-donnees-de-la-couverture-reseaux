var siteSelected = sites[0];var map;var sourceLoaded = [];var layerLoaded = [];var layerVisible = [];var optserach = false;var r_lock = null; var lock_id = null; if (!mapboxgl.supported()) { alert("Votre navigateur Internet ne permet pas d’afficher cette page.\nTrouvez à cette adresse les navigateurs compatibles :\nhttps://www.mapbox.com/help/mapbox-browser-support/");}else{ mapboxgl.accessToken = "pk.eyJ1IjoieWFvcGFyZmFpdCIsImEiOiJja2p4enkzM20wbW95MnFwZzdod2h4YWtpIn0.-A0-mEp4INf4laMwOdRVNA"; map = new mapboxgl.Map({ container: 'maps', style: 'mapbox://styles/mapbox/streets-v11', center: [-5.891926847184704, 7.41331470697536], zoom: 5.5, maxZoom: 13, minZoom: 4, maxBounds: [-16, 2, 3, 13], attributionControl: false }); map.dragRotate.disable(); map.touchZoomRotate.disableRotation(); map.ready = true;}var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken, country: 'ci', types: 'country, region, postcode, district, place, locality, neighborhood, address', language : 'fr' }); geocoder.options.placeholder = "Rechercher..."; map.addControl(geocoder); map.addControl(new mapboxgl.FullscreenControl({ container: document.querySelector('maps') })); map.addControl(new mapboxgl.NavigationControl(), 'top-right'); map.addControl(new mapboxgl.GeolocateControl({ positionOptions: { enableHighAccuracy: true, }, trackUserLocation: true, showUserHeading: true, })); map.addControl(new mapboxgl.AttributionControl(), 'bottom-right'); map.addControl(new mapboxgl.ScaleControl({ maxWidth: 80, unit: 'metric'})); map.on('load', () => { addOnSource('localites','geojson','ci_limites_localites.geojson'); addOnSource('regions','geojson','ci_limites_regions.geojson'); addOnSource('districts','geojson','ci_limite_distrricts.geojson'); addOnSource('states','geojson','ci_limites_states.geojson'); addFillLayer('district-fills','districts',1,8,'rgb(6, 250, 46)',0.1); addFillLayer('region-fills','regions',6,9,'rgba(247, 21, 198, 0.173)',0.2); addFillLayer('localite-fills','localites',8.6,20,'rgba(214, 136, 18, 0.1)',0.2); addOnSource('areawhitedata','geojson','dataWhiteArea.geojson'); addOnCircleLayer('awdata','areawhitedata','white'); layerVisible.push('awdata'); addOnSource('alldata','geojson','alldata.geojson'); addOnCircleLayer('adata','alldata','#00b09b'); layerVisible.push('adata'); addOnSource('data2G','geojson','data2G.geojson'); addOnCircleLayer('d2G','data2G','#00b09b'); layerVisible.push('d2G'); addOnSource('data3G','geojson','data3G.geojson'); addOnCircleLayer('d3G','data3G','#00b09b'); layerVisible.push('d3G'); addOnSource('data4G','geojson','data4G.geojson'); addOnCircleLayer('d4G','data4G','#00b09b'); layerVisible.push('d4G'); addOnSource('dataOrange','geojson','dataOrange.geojson'); addOnCircleLayer('odata','dataOrange','orange'); layerVisible.push('odata'); addOnSource('dataMtn','geojson','dataMtn.geojson'); addOnCircleLayer('mtdata','dataMtn','#fffc37'); layerVisible.push('mtdata'); addOnSource('dataMoov','geojson','dataMoov.geojson'); addOnCircleLayer('modata','dataMoov','#075bf7'); layerVisible.push('modata'); addOnSource('dataOrange2G','geojson','dataOrange2G.geojson'); addOnCircleLayer('o2Gdata','dataOrange2G','orange'); layerVisible.push('o2Gdata'); addOnSource('dataMtn2G','geojson','dataMtn2G.geojson'); addOnCircleLayer('mt2Gdata','dataMtn2G','#fffc37'); layerVisible.push('mt2Gdata'); addOnSource('dataMoov2G','geojson','dataMoov2G.geojson'); addOnCircleLayer('mo2Gdata','dataMoov2G','#075bf7'); layerVisible.push('mo2Gdata'); addOnSource('dataOrange3G','geojson','dataOrange3G.geojson'); addOnCircleLayer('o3Gdata','dataOrange3G','orange'); layerVisible.push('o3Gdata'); addOnSource('dataMtn3G','geojson','dataMtn3G.geojson'); addOnCircleLayer('mt3Gdata','dataMtn3G','#fffc37'); layerVisible.push('mt3Gdata'); addOnSource('dataMoov3G','geojson','dataMoov3G.geojson'); addOnCircleLayer('mo3Gdata','dataMoov3G','#075bf7'); layerVisible.push('mo3Gdata'); addOnSource('dataOrange4G','geojson','dataOrange4G.geojson'); addOnCircleLayer('o4Gdata','dataOrange4G','orange'); layerVisible.push('o4Gdata'); addOnSource('dataMtn4G','geojson','dataMtn4G.geojson'); addOnCircleLayer('mt4Gdata','dataMtn4G','#fffc37'); layerVisible.push('mt4Gdata'); addOnSource('dataMoov4G','geojson','dataMoov4G.geojson'); addOnCircleLayer('mo4Gdata','dataMoov4G','#075bf7'); layerVisible.push('mo4Gdata'); addLineLayer('localite-borders','localites',8,20,'rgba(66, 65, 66, 0.264)',1); addLineLayer('region-borders','regions',6,20,'rgba(10, 93, 248, 0.493)',1.5); addLineLayer('district-borders','districts',1,8,'white',1); addLineLayer('state-borders','states',1,7,'rgba(22, 23, 24, 0.911)',1.5); addLayerLabel('region-label','regions','admin2Name',6,9); addLayerLabel('district-label','districts','admin1Name',1,8); map.on('mousemove', 'localite-fills', (e) => { document.getElementById('descript').innerHTML = '<h5>Departement : <b class="text-primary">'+e.features[0].properties.ADM3_FR+'</b></h5><p>REGION : '+e.features[0].properties.ADM2_FR+'</p>'; }); map.on('click', 'localite-fills', (a) => { map.flyTo({ center: [ a.lngLat.lng,a.lngLat.lat ], zoom: 9.5, speed: 0.5, curve: 1, essential:true, }); }); map.on('mousemove', 'region-fills', (e) => { document.getElementById('descript').innerHTML = '<h5>District : <b class="text-primary">'+e.features[0].properties.admin1Name+'</b></h5><p>REGION : '+e.features[0].properties.admin2Name+'</p>'; }); map.on('mousemove', 'district-fills', (e) => { document.getElementById('descript').innerHTML = '<h5>District : <b class="text-primary">'+e.features[0].properties.admin1Name+'</b></h5>'; }); map.on('click', 'district-fills', (a) => { if(map.getZoom() > 7){ }else{ map.flyTo({ center: [ a.lngLat.lng,a.lngLat.lat ], zoom: 7.5, speed: 0.5, curve: 1, essential:true, }); } }); map.on('click', 'district-fills', (a) => { map.flyTo({ center: [ a.lngLat.lng,a.lngLat.lat ], zoom: 7, speed: 0.5, curve: 1, essential:true, }); }); var hoveredDistrictId = null; map.on('mousemove', 'district-fills', (e) => { if (e.features.length > 0) { if (hoveredDistrictId != null) { map.setFeatureState( { source: 'districts', id: hoveredDistrictId }, { hover: false } ); } hoveredDistrictId = e.features[0].id; map.setFeatureState( { source: 'districts', id:hoveredDistrictId }, { hover: true } ); } }); map.on('click', 'region-fills', (a) => { if(map.getZoom() > 7.5) { }else{ var lat = a.features[0].geometry.coordinates[0][40][0]; var lng = a.features[0].geometry.coordinates[0][40][1]; map.flyTo({ center: [ a.lngLat.lng,a.lngLat.lat ], zoom: 8, speed: 0.5, curve: 1, essential:true, }); } }); var hoveredRegionId = null; map.on('click', 'region-fills', (e) => { if (e.features.length > 0) { if (hoveredRegionId != null) { map.setFeatureState( { source: 'regions', id: hoveredRegionId }, { hover: false } ); } hoveredRegionId = e.features[0].id; map.setFeatureState( { source: 'regions', id:hoveredRegionId }, { hover: true } ); } }); map.on('mousemove', 'region-fills', (e) => { if (e.features.length > 0) { if (hoveredRegionId != null) { map.setFeatureState( { source: 'regions', id: hoveredRegionId }, { hover: false } ); } hoveredRegionId = e.features[0].id; map.setFeatureState( { source: 'regions', id:hoveredRegionId }, { hover: true } ); } }); map.on('mouseenter', 'region-fills', () => { map.getCanvas().style.cursor = 'pointer'; }); map.on('mouseleave', 'district-fills', () => { if(optserach == false){ for(i=1;i<12;i++) { map.setFeatureState( { source: 'districts', id: i }, { hover: false } ); } } }); map.on('mouseleave', 'region-fills', () => { for(i=1;i<33;i++) { map.setFeatureState( { source: 'regions', id: i }, { hover: false } ); } }); var hoveredlocality = null; map.on('click', 'localite-fills', (e) => { if (e.features.length > 0) { if (hoveredlocality != null) { map.setFeatureState( { source: 'localites', id: hoveredlocality }, { hover: false } ); } hoveredlocality = e.features[0].id; map.setFeatureState( { source: 'localites', id:hoveredlocality }, { hover: true } ); } }); map.on('mouseleave', 'localite-fills', () => { if (hoveredStateId !== null) { map.setFeatureState( { source: 'localites', id: hoveredStateId }, { hover: false } ); } hoveredStateId = null; }); map.setLayoutProperty('country-label', 'text-field', [ 'get', `name_fr`, ]); setAllLayersInvisible(); setLayerVisible('adata'); }); function addOnSource(name,type,data){ map.addSource(name,{ 'type':type, 'data': data, });}function addOnCircleLayer(id,source,color){ map.addLayer({ 'id': id, 'type': 'circle', 'source': source, 'paint': { 'circle-radius': 4, 'circle-color': color, } });}function addLineLayer(id,source,minzoom,maxzoom,color,width){ map.addLayer({ 'id': id, 'type': 'line', 'source': source, 'minzoom': minzoom, 'maxzoom': maxzoom, 'layout': {}, 'paint': { 'line-color': color, 'line-width': width } });}function addFillLayer(id,source,minzoom,maxzoom,color,opacity){ map.addLayer({ 'id': id, 'type': 'fill', 'source': source, 'minzoom': minzoom, 'maxzoom': maxzoom, 'layout': {}, 'paint': { 'fill-color': color, 'fill-opacity': [ 'case', ['boolean', ['feature-state', 'hover'], false], 1, opacity ] } });}function addLayerLabel(id,source,text_f,minzoom,maxzoom){ map.addLayer({ 'id': id, 'type': 'symbol', 'source': source, 'layout': { 'text-field':['get',text_f], 'text-justify': 'auto', 'text-variable-anchor': ['top', 'bottom', 'left', 'right'], 'text-font': [ 'literal', ['DIN Offc Pro Italic', 'Arial Unicode MS Regular'], ], }, 'minzoom':minzoom, 'maxzoom':maxzoom, })}function setAllLayersInvisible() { while (layerVisible.length > 0) { setLayerInvisible(layerVisible[0]); }}function setLayerInvisible(layer) { map.setLayoutProperty(layer, "visibility", "none"); removeFromArray(layerVisible, layer);}function removeFromArray(array, value) { if (array.indexOf(value) >= 0) { array.splice(array.indexOf(value), 1); } } function setLayerVisible(layer) { if (!layerVisible.includes(layer)) { map.setLayoutProperty(layer, "visibility", "visible"); console.log("setLayerVisible : " + layer); layerVisible.push(layer); } } function showLayer(){ var opor = document.getElementById('orangeop'); var opmt = document.getElementById('mtnop'); var opmo = document.getElementById('moovop'); var t2G = document.getElementById('thecno2G'); var t3G = document.getElementById('thecno3G'); var t4G = document.getElementById('thecno4G'); var inputTb = [opor,opmt,opmo]; setAllLayersInvisible(); if(opor.checked === true && opmt.checked == true && opmo.checked == true){ if(t2G.checked === true){ setLayerVisible('o2Gdata'); setLayerVisible('mt2Gdata'); setLayerVisible('mo2Gdata'); }else if(t3G.checked === true){ setLayerVisible('o3Gdata'); setLayerVisible('mt3Gdata'); setLayerVisible('mo3Gdata'); }else if(t4G.checked === true){ setLayerVisible('o4Gdata'); setLayerVisible('mt4Gdata'); setLayerVisible('mo4Gdata'); }else{ setLayerVisible('odata'); setLayerVisible('mtdata'); setLayerVisible('modata'); } }else if(opor.checked === true && opmt.checked == false && opmo.checked == false){ if(t2G.checked === true){ setLayerVisible('o2Gdata'); }else if(t3G.checked === true){ setLayerVisible('o3Gdata'); }else if(t4G.checked === true){ setLayerVisible('o4Gdata'); }else{ setLayerVisible('odata'); } }else if(opor.checked === false && opmt.checked == true && opmo.checked == false){ if(t2G.checked === true){ setLayerVisible('mt2Gdata'); }else if(t3G.checked === true){ setLayerVisible('mt3Gdata'); }else if(t4G.checked === true){ setLayerVisible('mt4Gdata'); }else{ setLayerVisible('mtdata'); } }else if(opor.checked === false && opmt.checked == false && opmo.checked == true){ if(t2G.checked === true){ setLayerVisible('mo2Gdata'); }else if(t3G.checked === true){ setLayerVisible('mo3Gdata'); }else if(t4G.checked === true){ setLayerVisible('mo4Gdata'); }else{ setLayerVisible('modata'); } }else if(opor.checked === false && opmt.checked == true && opmo.checked == true){ if(t2G.checked === true){ setLayerVisible('mt2Gdata'); setLayerVisible('mo2Gdata'); }else if(t3G.checked === true){ setLayerVisible('mt3Gdata'); setLayerVisible('mo3Gdata'); }else if(t4G.checked === true){ setLayerVisible('mt4Gdata'); setLayerVisible('mo4Gdata'); }else{ setLayerVisible('mtdata'); setLayerVisible('modata'); } }else if(opor.checked === true && opmt.checked == true && opmo.checked == false){ if(t2G.checked === true){ setLayerVisible('o2Gdata'); setLayerVisible('mt2Gdata'); }else if(t3G.checked === true){ setLayerVisible('o3Gdata'); setLayerVisible('mt3Gdata'); }else if(t4G.checked === true){ setLayerVisible('o4Gdata'); setLayerVisible('mt4Gdata'); }else{ setLayerVisible('odata'); setLayerVisible('mtdata'); } }else if(opor.checked === true && opmt.checked == false && opmo.checked == true){ if(t2G.checked === true){ setLayerVisible('o2Gdata'); setLayerVisible('mo2Gdata'); }else if(t3G.checked === true){ setLayerVisible('o3Gdata'); setLayerVisible('mo3Gdata'); }else if(t4G.checked === true){ setLayerVisible('o4Gdata'); setLayerVisible('mo4Gdata'); }else{ setLayerVisible('odata'); setLayerVisible('modata'); } }else{ if(t2G.checked === true) setLayerVisible('d2G'); }else if(t3G.checked === true){ setLayerVisible('d3G'); }else if(t4G.checked === true){ setLayerVisible('d4G'); } else{ setLayerVisible('adata'); } } } function showWhiteArea(){ setAllLayersInvisible(); setLayerVisible('awdata'); }function ditrictSelected(){ var district = document.getElementById('ditrict_s'); var region = document.getElementById('region_s') if(district.value == 1){ flyMap(-6.85451,4.95212,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="25">NAWA</option><option value="12">GBOKLE</option><option value="27">SAN-PEDRO</option>'; }else if(district.value == 2){ flyMap(-7.33710,9.41089,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="10">FOLON</option><option value="21">KABADOUGOU</option>'; }else if(district.value == 3){ flyMap(-3.93656,5.35020,7); region.innerHTML ='<option value="">---</option>'; }else if(district.value == 4){ flyMap(-5.23295,6.84131,7); region.innerHTML ='<option value="">---</option>' }else if(district.value == 5){ flyMap(-5.71085,5.97882,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="13">GOH</option><option value="22">LOH-DJIBOUA</option>' }else if(district.value == 6){ flyMap(-4.55179,7.11393,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="4">BELIER</option><option value="19">IFFOU</option><option value="33">MORONOU</option><option value="32">N\'ZI</option>' }else if(district.value == 7){ flyMap(-7.76055,6.81789,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="7">CAVALY</option><option value="16">GUEMON</option><option value="30">TONKPI</option>' }else if(district.value == 8){ flyMap(-6.26151,7.11491,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="18">HAUT-SASSANDRA</option><option value="23">MARAHOUE</option>' }else if(district.value == 9){ flyMap(-5.72318,9.74464,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="3">BAGOUE</option><option value="26">PORO</option><option value="29">TCHOLOGO</option>' }else if(district.value == 10){ flyMap(-4.85518,8.29674,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="11">GBEKE</option><option value="17">HAMBOL</option>' }else if(district.value == 11){ flyMap(-6.81993,8.44411,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="2">BAFING</option><option value="5">BERE</option><option value="31">WORODOUGOU</option>' }else if(district.value == 12){ flyMap(-3.33729,8.71763,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="6">BOUNKANI</option><option value="14">GONTOUGO</option>' }else if(district.value == 13){ flyMap(-4.50054,5.94614,7); region.innerHTML = '<option value="">Selectionner une region</option><option value="1">AGNEBI TIASSA</option><option value="15">GRANDS PONTS</option><option value="24">ME</option>' }else if(district.value == 14){ flyMap(-3.23515,5.35694,7); region.innerHTML='<option value="">Selectionner une region</option><option value="20">INDENIE-DJOUABLIN</option><option value="28">SUD-COMOE</option>' } else{ optserach == false; flyMap(-5.89192, 7.41331,5.5); region.innerHTML = '<option value="">Selectionner une region</option><option value="1">AGNEBI TIASSA</option><option value="2">BAFING</option><option value="3">BAGOUE</option><option value="4">BELIER</option><option value="5">BERE</option><option value="6">BOUNKANI</option><option value="7">CAVALY</option><option value="8">DISTICT AUTONOME D\'ABIDJAN</option><option value="9">DISTICT AUTONOME DE YAMOUSSOUKRO</option><option value="10">FOLON</option><option value="11">GBEKE</option><option value="13">GOH</option><option value="14">GONTOUGO</option><option value="15">GRANDS PONTS</option><option value="16">GUEMON</option><option value="17">HAMBOL</option><option value="18">HAUT-SASSANDRA</option><option value="19">IFFOU</option><option value="20">INDENIE-DJOUABLIN</option><option value="21">KABADOUGOU</option><option value="22">LOH-DJIBOUA</option><option value="23">MARAHOUE</option><option value="24">ME</option><option value="26">PORO</option><option value="28">SUD-COMOE</option><option value="29">TCHOLOGO</option><option value="30">TONKPI</option><option value="31">WORODOUGOU</option><option value="32">N\'ZI</option><option value="33">MORONOU</option>'; } if (lock_id != null) { map.setFeatureState( { source: 'districts', id: lock_id }, { hover: false } ); } lock_id = district.value; map.setFeatureState( { source: 'districts', id:lock_id }, { hover: true } ); optserach = true;}function regionSelected(){ var district = document.getElementById('ditrict_s'); var region = document.getElementById('region_s'); if(region.value == 1 ){ flyMap(-4.55783,5.95810,8.5); }else if(region.value == 2){ flyMap(-7.60506,8.36806,8.5); }else if(region.value == 3){ flyMap(-6.39656,10.05434, 8.5); }else if(region.value == 4){ flyMap(-4.96834,6.81628,8); }else if(region.value == 5){ flyMap(-5.99007,8.29740,8); }else if(region.value == 6){ flyMap(-3.24348,9.17696,8); }else if(region.value == 7){ flyMap(-7.83028,6.41795,8); }else if(region.value == 8){ flyMap(-4.05098,5.39620,8); }else if(region.value == 9){ flyMap(-5.23201,6.84355,8); }else if(region.value == 10){ flyMap(-7.65999,10.26521,8); }else if(region.value == 11){ flyMap(-5.13186,7.70873,8); }else if(region.value == 12){ flyMap(-6.04500,5.30322,8); }else if(region.value == 13){ flyMap(-5.79781,6.20501,8); }else if(region.value == 14){ flyMap(-3.11165,8.37893,8); }else if(region.value == 15){ flyMap(-4.8035,5.28134,8); }else if(region.value == 16){ flyMap(-7.29744,7.03985,8); }else if(region.value == 17){ flyMap(-4.75410,8.49847,8); }else if(region.value == 18){ flyMap(-6.64375,7.07256,8); }else if(region.value == 19){ flyMap(-4.04549,7.58470,8); }else if(region.value == 20){ flyMap(-3.45772,6.78355,8); }else if(region.value == 21){ flyMap(-7.50879,9.48093,8); }else if(region.value == 22){ flyMap(-5.46694,5.66291,8); }else if(region.value == 23){ flyMap(-5.77456,7.00595,8); }else if(region.value == 24){ flyMap(-3.86294,6.08913,8); }else if(region.value == 25){ flyMap(-6.68643,5.95802,8); }else if(region.value == 26){ flyMap(-6.04922,9.54975,8); }else if(region.value == 27){ flyMap(-3.86294,6.08913,8); }else if(region.value == 28){ flyMap(-3.21475,5.41141,8); }else if(region.value == 29){ flyMap(-4.78579,9.50641,8); }else if(region.value == 30){ flyMap(-7.76309,7.35475,8); }else if(region.value == 31){ flyMap(-6.55459,8.42121,8); }else if(region.value == 32){ flyMap(-4.63198,6.97324,8); }else if(region.value == 33){ flyMap(-4.31338,6.70053,8); } if (r_lock != null) { map.setFeatureState( { source: 'regions', id: r_lock }, { hover: false } ); } r_lock = region.value; map.setFeatureState( { source: 'regions', id:r_lock }, { hover: true } ); } function flyMap(lng,lat,zoom){ map.flyTo({ center: [ lng,lat, ], zoom: zoom, speed: 0.5, curve: 1, essential:true, });}